//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var ItemStatus = newItemStatusTable("InventoryProDB", "item_status", "")

type itemStatusTable struct {
	mysql.Table

	// Columns
	ID         mysql.ColumnString
	StatusName mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type ItemStatusTable struct {
	itemStatusTable

	NEW itemStatusTable
}

// AS creates new ItemStatusTable with assigned alias
func (a ItemStatusTable) AS(alias string) *ItemStatusTable {
	return newItemStatusTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ItemStatusTable with assigned schema name
func (a ItemStatusTable) FromSchema(schemaName string) *ItemStatusTable {
	return newItemStatusTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ItemStatusTable with assigned table prefix
func (a ItemStatusTable) WithPrefix(prefix string) *ItemStatusTable {
	return newItemStatusTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ItemStatusTable with assigned table suffix
func (a ItemStatusTable) WithSuffix(suffix string) *ItemStatusTable {
	return newItemStatusTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newItemStatusTable(schemaName, tableName, alias string) *ItemStatusTable {
	return &ItemStatusTable{
		itemStatusTable: newItemStatusTableImpl(schemaName, tableName, alias),
		NEW:             newItemStatusTableImpl("", "new", ""),
	}
}

func newItemStatusTableImpl(schemaName, tableName, alias string) itemStatusTable {
	var (
		IDColumn         = mysql.StringColumn("id")
		StatusNameColumn = mysql.StringColumn("status_name")
		allColumns       = mysql.ColumnList{IDColumn, StatusNameColumn}
		mutableColumns   = mysql.ColumnList{StatusNameColumn}
	)

	return itemStatusTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		StatusName: StatusNameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
