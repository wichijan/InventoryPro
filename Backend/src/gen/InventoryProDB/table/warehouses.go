//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Warehouses = newWarehousesTable("InventoryProDB", "warehouses", "")

type warehousesTable struct {
	mysql.Table

	// Columns
	ID          mysql.ColumnString
	Name        mysql.ColumnString
	Description mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type WarehousesTable struct {
	warehousesTable

	NEW warehousesTable
}

// AS creates new WarehousesTable with assigned alias
func (a WarehousesTable) AS(alias string) *WarehousesTable {
	return newWarehousesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new WarehousesTable with assigned schema name
func (a WarehousesTable) FromSchema(schemaName string) *WarehousesTable {
	return newWarehousesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new WarehousesTable with assigned table prefix
func (a WarehousesTable) WithPrefix(prefix string) *WarehousesTable {
	return newWarehousesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new WarehousesTable with assigned table suffix
func (a WarehousesTable) WithSuffix(suffix string) *WarehousesTable {
	return newWarehousesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newWarehousesTable(schemaName, tableName, alias string) *WarehousesTable {
	return &WarehousesTable{
		warehousesTable: newWarehousesTableImpl(schemaName, tableName, alias),
		NEW:             newWarehousesTableImpl("", "new", ""),
	}
}

func newWarehousesTableImpl(schemaName, tableName, alias string) warehousesTable {
	var (
		IDColumn          = mysql.StringColumn("id")
		NameColumn        = mysql.StringColumn("name")
		DescriptionColumn = mysql.StringColumn("description")
		allColumns        = mysql.ColumnList{IDColumn, NameColumn, DescriptionColumn}
		mutableColumns    = mysql.ColumnList{NameColumn, DescriptionColumn}
	)

	return warehousesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		Name:        NameColumn,
		Description: DescriptionColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
