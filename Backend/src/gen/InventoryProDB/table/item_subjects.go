//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var ItemSubjects = newItemSubjectsTable("InventoryProDB", "item_subjects", "")

type itemSubjectsTable struct {
	mysql.Table

	// Columns
	ID        mysql.ColumnString
	ItemID    mysql.ColumnString
	SubjectID mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type ItemSubjectsTable struct {
	itemSubjectsTable

	NEW itemSubjectsTable
}

// AS creates new ItemSubjectsTable with assigned alias
func (a ItemSubjectsTable) AS(alias string) *ItemSubjectsTable {
	return newItemSubjectsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ItemSubjectsTable with assigned schema name
func (a ItemSubjectsTable) FromSchema(schemaName string) *ItemSubjectsTable {
	return newItemSubjectsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ItemSubjectsTable with assigned table prefix
func (a ItemSubjectsTable) WithPrefix(prefix string) *ItemSubjectsTable {
	return newItemSubjectsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ItemSubjectsTable with assigned table suffix
func (a ItemSubjectsTable) WithSuffix(suffix string) *ItemSubjectsTable {
	return newItemSubjectsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newItemSubjectsTable(schemaName, tableName, alias string) *ItemSubjectsTable {
	return &ItemSubjectsTable{
		itemSubjectsTable: newItemSubjectsTableImpl(schemaName, tableName, alias),
		NEW:               newItemSubjectsTableImpl("", "new", ""),
	}
}

func newItemSubjectsTableImpl(schemaName, tableName, alias string) itemSubjectsTable {
	var (
		IDColumn        = mysql.StringColumn("id")
		ItemIDColumn    = mysql.StringColumn("item_id")
		SubjectIDColumn = mysql.StringColumn("subject_id")
		allColumns      = mysql.ColumnList{IDColumn, ItemIDColumn, SubjectIDColumn}
		mutableColumns  = mysql.ColumnList{ItemIDColumn, SubjectIDColumn}
	)

	return itemSubjectsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		ItemID:    ItemIDColumn,
		SubjectID: SubjectIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
