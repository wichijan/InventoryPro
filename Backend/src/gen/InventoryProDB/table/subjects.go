//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Subjects = newSubjectsTable("InventoryProDB", "subjects", "")

type subjectsTable struct {
	mysql.Table

	// Columns
	ID          mysql.ColumnString
	Name        mysql.ColumnString
	Description mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type SubjectsTable struct {
	subjectsTable

	NEW subjectsTable
}

// AS creates new SubjectsTable with assigned alias
func (a SubjectsTable) AS(alias string) *SubjectsTable {
	return newSubjectsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SubjectsTable with assigned schema name
func (a SubjectsTable) FromSchema(schemaName string) *SubjectsTable {
	return newSubjectsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SubjectsTable with assigned table prefix
func (a SubjectsTable) WithPrefix(prefix string) *SubjectsTable {
	return newSubjectsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SubjectsTable with assigned table suffix
func (a SubjectsTable) WithSuffix(suffix string) *SubjectsTable {
	return newSubjectsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSubjectsTable(schemaName, tableName, alias string) *SubjectsTable {
	return &SubjectsTable{
		subjectsTable: newSubjectsTableImpl(schemaName, tableName, alias),
		NEW:           newSubjectsTableImpl("", "new", ""),
	}
}

func newSubjectsTableImpl(schemaName, tableName, alias string) subjectsTable {
	var (
		IDColumn          = mysql.StringColumn("id")
		NameColumn        = mysql.StringColumn("name")
		DescriptionColumn = mysql.StringColumn("description")
		allColumns        = mysql.ColumnList{IDColumn, NameColumn, DescriptionColumn}
		mutableColumns    = mysql.ColumnList{NameColumn, DescriptionColumn}
	)

	return subjectsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		Name:        NameColumn,
		Description: DescriptionColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
