//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Shelves = newShelvesTable("InventoryProDB", "shelves", "")

type shelvesTable struct {
	mysql.Table

	// Columns
	ID     mysql.ColumnString
	RoomID mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type ShelvesTable struct {
	shelvesTable

	NEW shelvesTable
}

// AS creates new ShelvesTable with assigned alias
func (a ShelvesTable) AS(alias string) *ShelvesTable {
	return newShelvesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ShelvesTable with assigned schema name
func (a ShelvesTable) FromSchema(schemaName string) *ShelvesTable {
	return newShelvesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ShelvesTable with assigned table prefix
func (a ShelvesTable) WithPrefix(prefix string) *ShelvesTable {
	return newShelvesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ShelvesTable with assigned table suffix
func (a ShelvesTable) WithSuffix(suffix string) *ShelvesTable {
	return newShelvesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newShelvesTable(schemaName, tableName, alias string) *ShelvesTable {
	return &ShelvesTable{
		shelvesTable: newShelvesTableImpl(schemaName, tableName, alias),
		NEW:          newShelvesTableImpl("", "new", ""),
	}
}

func newShelvesTableImpl(schemaName, tableName, alias string) shelvesTable {
	var (
		IDColumn       = mysql.StringColumn("id")
		RoomIDColumn   = mysql.StringColumn("room_id")
		allColumns     = mysql.ColumnList{IDColumn, RoomIDColumn}
		mutableColumns = mysql.ColumnList{RoomIDColumn}
	)

	return shelvesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:     IDColumn,
		RoomID: RoomIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
