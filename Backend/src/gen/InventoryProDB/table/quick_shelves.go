//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var QuickShelves = newQuickShelvesTable("InventoryProDB", "quick_shelves", "")

type quickShelvesTable struct {
	mysql.Table

	// Columns
	QuickShelfID mysql.ColumnString
	RoomID       mysql.ColumnString
	Name         mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type QuickShelvesTable struct {
	quickShelvesTable

	NEW quickShelvesTable
}

// AS creates new QuickShelvesTable with assigned alias
func (a QuickShelvesTable) AS(alias string) *QuickShelvesTable {
	return newQuickShelvesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new QuickShelvesTable with assigned schema name
func (a QuickShelvesTable) FromSchema(schemaName string) *QuickShelvesTable {
	return newQuickShelvesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new QuickShelvesTable with assigned table prefix
func (a QuickShelvesTable) WithPrefix(prefix string) *QuickShelvesTable {
	return newQuickShelvesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new QuickShelvesTable with assigned table suffix
func (a QuickShelvesTable) WithSuffix(suffix string) *QuickShelvesTable {
	return newQuickShelvesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newQuickShelvesTable(schemaName, tableName, alias string) *QuickShelvesTable {
	return &QuickShelvesTable{
		quickShelvesTable: newQuickShelvesTableImpl(schemaName, tableName, alias),
		NEW:               newQuickShelvesTableImpl("", "new", ""),
	}
}

func newQuickShelvesTableImpl(schemaName, tableName, alias string) quickShelvesTable {
	var (
		QuickShelfIDColumn = mysql.StringColumn("quick_shelf_id")
		RoomIDColumn       = mysql.StringColumn("room_id")
		NameColumn         = mysql.StringColumn("name")
		allColumns         = mysql.ColumnList{QuickShelfIDColumn, RoomIDColumn, NameColumn}
		mutableColumns     = mysql.ColumnList{RoomIDColumn, NameColumn}
	)

	return quickShelvesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		QuickShelfID: QuickShelfIDColumn,
		RoomID:       RoomIDColumn,
		Name:         NameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
