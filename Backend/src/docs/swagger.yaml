definitions:
  model.Roles:
    properties:
      id:
        type: string
      roleName:
        type: string
    type: object
  model.Rooms:
    properties:
      id:
        type: string
      name:
        type: string
      warehouseID:
        type: string
    type: object
  model.ShelveTypes:
    properties:
      id:
        type: string
      typeName:
        type: string
    type: object
  model.Shelves:
    properties:
      id:
        type: string
      roomID:
        type: string
      shelveTypeID:
        type: string
    type: object
  model.UserTypes:
    properties:
      id:
        type: string
      typeName:
        type: string
    type: object
  model.Warehouses:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  models.CheckEmailRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  models.CheckUsernameRequest:
    properties:
      username:
        type: string
    required:
    - username
    type: object
  models.INVErrorMessage:
    properties:
      errorMessage:
        type: string
    type: object
  models.ItemReserveODT:
    properties:
      itemId:
        type: string
      quantity:
        type: integer
    type: object
  models.ItemWithEverything:
    properties:
      borrowedByUserID:
        type: string
      borrowedByUserName:
        type: string
      classFour:
        type: boolean
      classOne:
        type: boolean
      classThree:
        type: boolean
      classTwo:
        type: boolean
      damaged:
        type: boolean
      damagedDesc:
        type: string
      description:
        type: string
      id:
        type: string
      keywords:
        items:
          properties:
            itemID:
              type: string
            keywordID:
              type: string
          type: object
        type: array
      name:
        type: string
      picture:
        type: string
      quantityInShelve:
        type: integer
      status:
        type: string
      subject:
        items:
          properties:
            itemID:
              type: string
            subjectID:
              type: string
          type: object
        type: array
    type: object
  models.ItemWithKeywordName:
    properties:
      itemId:
        type: string
      keywordName:
        type: string
    type: object
  models.ItemWithStatus:
    properties:
      borrowedByUserID:
        type: string
      borrowedByUserName:
        type: string
      classFour:
        type: boolean
      classOne:
        type: boolean
      classThree:
        type: boolean
      classTwo:
        type: boolean
      damaged:
        type: boolean
      damagedDesc:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      picture:
        type: string
      status:
        type: string
    type: object
  models.ItemWithSubjectName:
    properties:
      itemId:
        type: string
      keywordName:
        type: string
    type: object
  models.LoggedInResponse:
    properties:
      id:
        type: string
      loggedIn:
        type: boolean
    type: object
  models.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.LoginResponse:
    properties:
      refreshToken:
        type: string
      token:
        type: string
      user:
        $ref: '#/definitions/models.UserWithTypeName'
    type: object
  models.OwnShelve:
    properties:
      id:
        type: string
      roomID:
        type: string
      shelveTypeName:
        type: string
    type: object
  models.RegistrationRequest:
    properties:
      email:
        type: string
      firstname:
        type: string
      jobtitle:
        type: string
      lastname:
        type: string
      password:
        type: string
      phonenumber:
        type: string
      username:
        type: string
      usertypename:
        type: string
    type: object
  models.RoleIdODT:
    properties:
      role_id:
        type: string
      user_id:
        type: string
    type: object
  models.RoleODT:
    properties:
      role_name:
        type: string
    type: object
  models.RoomWithShelves:
    properties:
      id:
        type: string
      name:
        type: string
      shelves:
        items:
          properties:
            id:
              type: string
            roomID:
              type: string
            shelveTypeID:
              type: string
          type: object
        type: array
      warehouseID:
        type: string
    type: object
  models.ShelveWithItems:
    properties:
      id:
        type: string
      items:
        items:
          properties:
            classFour:
              type: boolean
            classOne:
              type: boolean
            classThree:
              type: boolean
            classTwo:
              type: boolean
            damaged:
              type: boolean
            damagedDescription:
              type: string
            description:
              type: string
            id:
              type: string
            name:
              type: string
            picture:
              type: string
          type: object
        type: array
      roomID:
        type: string
      shelveTypeName:
        type: string
    type: object
  models.UserWithTypeName:
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      jobTitle:
        type: string
      lastName:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      userTypeName:
        type: string
      username:
        type: string
    type: object
  models.WarehouseWithRooms:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      rooms:
        items:
          properties:
            id:
              type: string
            name:
              type: string
            warehouseID:
              type: string
          type: object
        type: array
    type: object
info:
  contact: {}
paths:
  /auth/check-email:
    post:
      consumes:
      - application/json
      description: Check email
      parameters:
      - description: Email data
        in: body
        name: checkEmailRequest
        required: true
        schema:
          $ref: '#/definitions/models.CheckEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Check email
      tags:
      - Users
  /auth/check-username:
    post:
      consumes:
      - application/json
      description: Check username
      parameters:
      - description: Username data
        in: body
        name: checkUsernameRequest
        required: true
        schema:
          $ref: '#/definitions/models.CheckUsernameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Check username
      tags:
      - Users
  /auth/logged-in:
    get:
      consumes:
      - application/json
      description: Check if user is logged in
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoggedInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Logged in
      tags:
      - Users
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Login user
      tags:
      - Users
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegistrationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Register user
      tags:
      - Users
  /items:
    get:
      consumes:
      - application/json
      description: Get items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ItemWithEverything'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Get items
      tags:
      - Items
    post:
      consumes:
      - application/json
      description: Create Item
      parameters:
      - description: ItemWithStatus model
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/model.Rooms'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ItemWithStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Create Item
      tags:
      - Items
    put:
      consumes:
      - application/json
      description: Update Item
      parameters:
      - description: ItemWithStatus model
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.ItemWithStatus'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ItemWithStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Update Item
      tags:
      - Items
  /items/:id:
    get:
      consumes:
      - application/json
      description: Get item by id
      parameters:
      - description: item id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ItemWithEverything'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Get item by id
      tags:
      - Items
  /items/addkeyword:
    post:
      consumes:
      - application/json
      description: Add keyword to item
      parameters:
      - description: ItemWithKeywordName model
        in: body
        name: item_keyword
        required: true
        schema:
          $ref: '#/definitions/models.ItemWithKeywordName'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Add keyword to item
      tags:
      - Items
  /items/addsubject:
    post:
      consumes:
      - application/json
      description: Add Subject to item
      parameters:
      - description: ItemWithSubjectName model
        in: body
        name: item_keyword
        required: true
        schema:
          $ref: '#/definitions/models.ItemWithSubjectName'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Add Subject to item
      tags:
      - Items
  /items/removekeyword:
    post:
      consumes:
      - application/json
      description: Remove keyword to item
      parameters:
      - description: ItemWithKeywordName model
        in: body
        name: item_keyword
        required: true
        schema:
          $ref: '#/definitions/models.ItemWithKeywordName'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Remove keyword to item
      tags:
      - Items
  /items/removesubject:
    post:
      consumes:
      - application/json
      description: Remove Subject to item
      parameters:
      - description: ItemWithSubjectName model
        in: body
        name: item_subject
        required: true
        schema:
          $ref: '#/definitions/models.ItemWithSubjectName'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Remove Subject to item
      tags:
      - Items
  /items/reserve:
    get:
      consumes:
      - application/json
      description: Reserve Item when logged-in
      parameters:
      - description: ItemReserveODT model
        in: body
        name: ItemReserveODT
        required: true
        schema:
          $ref: '#/definitions/models.ItemReserveODT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Reserve Item
      tags:
      - Items
  /items/reserve-cancel/:id:
    get:
      consumes:
      - application/json
      description: Cancel Reserve Item when logged-in
      parameters:
      - description: item id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Cancel Reserve Item
      tags:
      - Items
  /roles:
    get:
      consumes:
      - application/json
      description: Get Roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Roles'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Get Roles
      tags:
      - Roles
    post:
      consumes:
      - application/json
      description: Create Role
      parameters:
      - description: RoleODT model
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.RoleODT'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Create Role
      tags:
      - Roles
    put:
      consumes:
      - application/json
      description: Update Role
      parameters:
      - description: Roles model
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.Roles'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Update Role
      tags:
      - Roles
  /rooms:
    get:
      consumes:
      - application/json
      description: Get rooms
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Rooms'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Get rooms
      tags:
      - Rooms
    post:
      consumes:
      - application/json
      description: Create Room
      parameters:
      - description: Room model
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/model.Rooms'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Rooms'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Create Room
      tags:
      - Rooms
    put:
      consumes:
      - application/json
      description: Update room
      parameters:
      - description: Room model
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/model.Rooms'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Rooms'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Update room
      tags:
      - Rooms
  /rooms/{id}:
    get:
      consumes:
      - application/json
      description: Get room by id with shelves
      parameters:
      - description: Room id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RoomWithShelves'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Get room by id with shelves
      tags:
      - Rooms
  /shelve-types:
    get:
      consumes:
      - application/json
      description: Get shelve-type
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ShelveTypes'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Get shelve-type
      tags:
      - Shelves
    post:
      consumes:
      - application/json
      description: Create shelve-type
      parameters:
      - description: shelve-type name
        in: body
        name: shelveTypeName
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Create shelve-type
      tags:
      - Shelves
    put:
      consumes:
      - application/json
      description: Update shelve-type
      parameters:
      - description: shelve-type model
        in: body
        name: shelveType
        required: true
        schema:
          $ref: '#/definitions/model.ShelveTypes'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Update shelve-type
      tags:
      - Shelves
  /shelve-types/{id}:
    delete:
      consumes:
      - application/json
      description: Delete shelve-type by id
      parameters:
      - description: shelve-type id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Delete shelve-type by id
      tags:
      - Shelves
  /shelves:
    get:
      consumes:
      - application/json
      description: Get shelves
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.OwnShelve'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Get shelves
      tags:
      - Shelves
    post:
      consumes:
      - application/json
      description: Create Shelve
      parameters:
      - description: Shelve model
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/model.Rooms'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Shelves'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Create Shelve
      tags:
      - Shelves
    put:
      consumes:
      - application/json
      description: Update shelve
      parameters:
      - description: OwnShelve model
        in: body
        name: shelve
        required: true
        schema:
          $ref: '#/definitions/models.OwnShelve'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OwnShelve'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Update shelve
      tags:
      - Shelves
  /shelves/{id}:
    get:
      consumes:
      - application/json
      description: Get shelve by id
      parameters:
      - description: Shelve id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OwnShelve'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Get shelve by id
      tags:
      - Shelves
  /shelveswithitems:
    get:
      consumes:
      - application/json
      description: Get shelves with items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ShelveWithItems'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Get shelves with items
      tags:
      - Shelves
  /shelveswithitems/{id}:
    get:
      consumes:
      - application/json
      description: Get shelve by id with items
      parameters:
      - description: shelve id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ShelveWithItems'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Get shelve by id with items
      tags:
      - Shelves
  /user-roles/add-role:
    delete:
      consumes:
      - application/json
      description: Add Role to User
      parameters:
      - description: RoleIdODT model
        in: body
        name: RoleIdODT
        required: true
        schema:
          $ref: '#/definitions/models.RoleIdODT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Add Role to User
      tags:
      - UserRoles
    post:
      consumes:
      - application/json
      description: Add Role to User
      parameters:
      - description: RoleIdODT model
        in: body
        name: RoleIdODT
        required: true
        schema:
          $ref: '#/definitions/models.RoleIdODT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Add Role to User
      tags:
      - UserRoles
  /user-types:
    get:
      consumes:
      - application/json
      description: Get UserTypes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.UserTypes'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Get UserTypes
      tags:
      - UserTypes
  /users/get-me:
    get:
      consumes:
      - application/json
      description: Get User Data when logged in
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserWithTypeName'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Get User Data
      tags:
      - Users
  /warehouses:
    get:
      consumes:
      - application/json
      description: Get warehouses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Warehouses'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Get warehouses
      tags:
      - Warehouses
    post:
      consumes:
      - application/json
      description: Create warehouse
      parameters:
      - description: Warehouse name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Warehouses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Create warehouse
      tags:
      - Warehouses
    put:
      consumes:
      - application/json
      description: Update warehouse
      parameters:
      - description: Warehouses model
        in: body
        name: genre
        required: true
        schema:
          $ref: '#/definitions/model.Warehouses'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Warehouses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Update warehouse
      tags:
      - Warehouses
  /warehouses/{id}:
    get:
      consumes:
      - application/json
      description: Get warehouse by id
      parameters:
      - description: Warehouse id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.WarehouseWithRooms'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.INVErrorMessage'
      summary: Get warehouse by id
      tags:
      - Warehouses
swagger: "2.0"
